plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.4"
}

repositories {
    mavenCentral()
}

def selenideVersion = "7.7.3",
    restAssuredVersion = "5.4.0",
    allureVersion = "2.21.0",
    junitVersion = "5.10.1",
    jacksonVersion = "2.16.1",
    aspectjweaverVersion = '1.9.20.1'

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {



            testImplementation("io.rest-assured:rest-assured:$restAssuredVersion",
                    'com.codeborne:selenide:7.5.0',
                    'commons-io:commons-io:2.19.0',
                    'com.opencsv:opencsv:5.11',
                    'com.google.code.gson:gson:2.13.1',
                    'com.fasterxml.jackson.core:jackson-core:2.19.0',
                    'com.fasterxml.jackson.core:jackson-databind:2.19.0',
                    "io.qameta.allure:allure-selenide:$allureVersion",
                    'org.assertj:assertj-core:3.27.3',
                    'io.rest-assured:rest-assured:5.3.1',
                    "io.rest-assured:json-schema-validator:$restAssuredVersion",
                    "io.qameta.allure:allure-rest-assured:$allureVersion",
                    "org.junit.jupiter:junit-jupiter:5.10.0",
                     'org.json:json:20231013'
            )




            // Lombok
            compileOnly("org.projectlombok:lombok:1.18.30")
            annotationProcessor("org.projectlombok:lombok:1.18.30")
            testCompileOnly("org.projectlombok:lombok:1.18.30")
            testAnnotationProcessor("org.projectlombok:lombok:1.18.30")

}

task simple_test{}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}